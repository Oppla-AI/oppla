name: Oppla Linux Build and Bundle

on:
  workflow_dispatch:
    inputs:
      architecture:
        description: 'Architecture to build'
        required: true
        default: 'both'
        type: choice
        options:
          - x86_64
          - aarch64
          - both
  push:
    branches:
      - main
    paths:
      - 'crates/**'
      - 'assets/**'
      - 'script/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'rust-toolchain.toml'
  pull_request:
    types: [labeled]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  bundle-linux-x86_64:
    timeout-minutes: 60
    name: Linux x86_64 release bundle
    runs-on:
      - buildjet-16vcpu-ubuntu-2004  # ubuntu 20.04 for minimal glibc
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.architecture == 'x86_64' || github.event.inputs.architecture == 'both') ||
      github.event_name == 'push' ||
      contains(github.event.pull_request.labels.*.name, 'build-linux')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          clean: false

      - name: Install Linux dependencies
        run: ./script/linux && ./script/install-mold 2.34.0

      - name: Determine version and release channel
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # This exports RELEASE_CHANNEL into env (GITHUB_ENV)
          script/determine-release-channel

      - name: Create Linux .tar.gz bundle
        run: script/bundle-linux

      - name: Upload Artifact to Workflow - oppla
        uses: actions/upload-artifact@v4
        with:
          name: oppla-${{ github.sha }}-x86_64-unknown-linux-gnu.tar.gz
          path: target/release/oppla-*.tar.gz

      - name: Upload Artifact to Workflow - oppla-remote-server
        uses: actions/upload-artifact@v4
        if: hashFiles('target/oppla-remote-server-linux-x86_64.gz') != ''
        with:
          name: oppla-remote-server-${{ github.sha }}-x86_64-unknown-linux-gnu.gz
          path: target/oppla-remote-server-linux-x86_64.gz

      - name: Upload Artifacts to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          prerelease: ${{ env.RELEASE_CHANNEL == 'preview' }}
          files: |
            target/oppla-remote-server-linux-x86_64.gz
            target/release/oppla-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bundle-linux-aarch64:
    timeout-minutes: 60
    name: Linux arm64 release bundle
    runs-on:
      - buildjet-32vcpu-ubuntu-2204-arm
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.architecture == 'aarch64' || github.event.inputs.architecture == 'both') ||
      github.event_name == 'push' ||
      contains(github.event.pull_request.labels.*.name, 'build-linux')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          clean: false

      - name: Install Linux dependencies
        run: ./script/linux

      - name: Determine version and release channel
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # This exports RELEASE_CHANNEL into env (GITHUB_ENV)
          script/determine-release-channel

      - name: Create and upload Linux .tar.gz bundles
        run: script/bundle-linux

      - name: Upload Artifact to Workflow - oppla
        uses: actions/upload-artifact@v4
        with:
          name: oppla-${{ github.sha }}-aarch64-unknown-linux-gnu.tar.gz
          path: target/release/oppla-*.tar.gz

      - name: Upload Artifact to Workflow - oppla-remote-server
        uses: actions/upload-artifact@v4
        if: hashFiles('target/oppla-remote-server-linux-aarch64.gz') != ''
        with:
          name: oppla-remote-server-${{ github.sha }}-aarch64-unknown-linux-gnu.gz
          path: target/oppla-remote-server-linux-aarch64.gz

      - name: Upload Artifacts to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          prerelease: ${{ env.RELEASE_CHANNEL == 'preview' }}
          files: |
            target/oppla-remote-server-linux-aarch64.gz
            target/release/oppla-linux-aarch64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}